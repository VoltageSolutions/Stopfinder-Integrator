name: CD Workflow

on:
  push:
    branches:
      - main

permissions:
  contents: write
  security-events: write

jobs:

  # -------------------------
  # 1. Linux Build Job
  # -------------------------
  build-linux:
    name: Build Linux Artifact
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'csharp'

      - name: Publish Linux Build
        run: |
          mkdir -p ./artifacts/linux
          dotnet publish src/Stopfinder-Integrator.ConsoleApp/Stopfinder-Integrator.ConsoleApp.csproj -c Release -r linux-x64 --self-contained false -o ./artifacts/linux
          zip -r ./artifacts/stopfinder-integrator-linux.zip ./artifacts/linux

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Save Linux Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: stopfinder-integrator-linux
          path: ./artifacts/stopfinder-integrator-linux.zip

      - name: Extract version from .csproj
        id: get_version
        shell: pwsh
        run:  |
          $version = (Select-String -Path src/Stopfinder-Integrator.ConsoleApp/Stopfinder-Integrator.ConsoleApp.csproj -Pattern '<Version>(.*?)</Version>').Matches.Groups[1].Value
          echo "version=$version" >> $env:GITHUB_OUTPUT

  # -------------------------
  # 2. Windows Build Job
  # -------------------------
  build-windows:
    name: Build Windows Artifact
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish Windows Build
        run: |
          mkdir artifacts\windows
          dotnet publish src/Stopfinder-Integrator.ConsoleApp/Stopfinder-Integrator.ConsoleApp.csproj -c Release -r win-x64 --self-contained false -o artifacts\windows
          Compress-Archive -Path artifacts\windows\* -DestinationPath artifacts\stopfinder-integrator-win.zip

      - name: Save Windows Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: stopfinder-integrator-win
          path: artifacts\stopfinder-integrator-win.zip

  # -------------------------

  release:
    name: Deploy Release to GitHub
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Download Linux Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: stopfinder-integrator-linux
          path: ./artifacts/linux

      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: stopfinder-integrator-win
          path: ./artifacts/windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.build-linux.outputs.version }}"
          release_name: "Release v${{ needs.build-linux.outputs.version }}"
          draft: false
          prerelease: false

      - name: Upload Linux Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux/stopfinder-integrator-linux.zip
          asset_name: stopfinder-integrator-linux.zip
          asset_content_type: application/zip

      - name: Upload Windows Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/stopfinder-integrator-win.zip
          asset_name: stopfinder-integrator-win.zip
          asset_content_type: application/zip

    # Upload Self-Contained Build
    # - name: Upload Self-Contained Build
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./artifacts/gamecontrollerforzwift_with_runtime.zip
    #     asset_name: gamecontrollerforzwift_with_runtime.zip
    #     asset_content_type: application/zip